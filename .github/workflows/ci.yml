name: SoftEtherClient CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ '**' ]

jobs:
  build-and-test:
    name: Build & Test (macOS ${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: arm64
            runner: macos-14
            zig-arch: aarch64
          - arch: x86_64
            runner: macos-13
            zig-arch: x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Cache Zig
        id: cache-zig
        uses: actions/cache@v4
        with:
          path: /usr/local/zig
          key: zig-0.15.2-${{ matrix.zig-arch }}-macos

      - name: Setup Zig
        if: steps.cache-zig.outputs.cache-hit != 'true'
        run: |
          cd /tmp
          curl -LO https://ziglang.org/download/0.15.2/zig-${{ matrix.zig-arch }}-macos-0.15.2.tar.xz
          tar -xf zig-${{ matrix.zig-arch }}-macos-0.15.2.tar.xz
          sudo mv zig-${{ matrix.zig-arch }}-macos-0.15.2 /usr/local/zig

      - name: Add Zig to PATH
        run: echo "/usr/local/zig" >> $GITHUB_PATH

      - name: Show Zig version
        run: zig version

      - name: Cache Homebrew
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/Homebrew
          key: brew-${{ runner.os }}-openssl3-${{ matrix.arch }}

      - name: Install dependencies
        run: |
          brew list openssl@3 &>/dev/null || brew install openssl@3
          brew link openssl@3 --force || true

      - name: Cache Zig build artifacts
        uses: actions/cache@v4
        with:
          path: |
            .zig-cache
            TapTun/.zig-cache
          key: zig-cache-${{ matrix.arch }}-${{ hashFiles('build.zig', 'TapTun/build.zig') }}
          restore-keys: |
            zig-cache-${{ matrix.arch }}-

      - name: Build TapTun library
        run: |
          cd TapTun
          zig build
          ls -lh zig-out/lib/

      - name: Build SoftEtherClient
        run: |
          zig build
          ls -lh zig-out/lib/
          ls -lh zig-out/bin/

      - name: Verify vpnclient binary
        run: |
          file zig-out/bin/vpnclient
          otool -L zig-out/bin/vpnclient || true
          ./zig-out/bin/vpnclient --help || echo "Help command exit code: $?"

      - name: Run tests
        run: zig build test